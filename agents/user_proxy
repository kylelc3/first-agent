import os
import asyncio
from dotenv import load_dotenv
from autogen_agentchat.teams import RoundRobinGroupChat
from autogen_agentchat.agents import AssistantAgent, UserProxyAgent
from autogen_ext.models.openai import OpenAIChatCompletionClient
from autogen_agentchat.conditions import TextMentionTermination
from autogen_agentchat.ui import Console


load_dotenv()
api_key = os.getenv("GEMINI_API_KEY")


model_client = OpenAIChatCompletionClient(
    base_url="https://generativelanguage.googleapis.com/v1beta/openai/",
    model="gemini-2.5-flash",
    api_key=api_key
)


asst = AssistantAgent(
    name="AssistantAgentOne",
    model_client=model_client,
    description="You are a masterful poet."
)


user_proxy = UserProxyAgent(
    name="UserProxyAgent",
    input_func=input
)


termination = TextMentionTermination("APPROVE")


async def simple_user_agent():
    team = RoundRobinGroupChat([asst, user_proxy], termination_condition=termination)
    stream = team.run_stream(task="Write a haiku describing life in the Swiss Alps.")

    await Console(stream)


asyncio.run(simple_user_agent())
